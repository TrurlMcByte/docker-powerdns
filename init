#!/bin/bash

set -e

if [ -n "$DEBUG_STARTUP" ]; then
	set -x
fi

# --help, --version
[ "$1" = "--help" ] || [ "$1" = "--version" ] && exec pdns_server $1
# treat everything except -- as exec cmd
[ "${1:0:2}" != "--" ] && exec "$@"

# Set PgSQL config
if [ -n "$PGSQL_HOST" ]; then
	sed -r -i "s/^[# ]*gpgsql-host=.*/gpgsql-host=${PGSQL_HOST}/g"             /etc/powerdns/pdns.d/pdns.local.gpgsql.conf
fi

if [ -n "$PGSQL_PORT" ]; then
	sed -r -i "s/^[# ]*gpgsql-port=.*/gpgsql-port=${PGSQL_PORT}/g"             /etc/powerdns/pdns.d/pdns.local.gpgsql.conf
fi

if [ -n "$PGSQL_USERNAME" ]; then
	sed -r -i "s/^[# ]*gpgsql-user=.*/gpgsql-user=${PGSQL_USERNAME}/g"         /etc/powerdns/pdns.d/pdns.local.gpgsql.conf
fi

if [ -n "$PGSQL_PASSWORD" ]; then
	sed -r -i "s/^[# ]*gpgsql-password=.*/gpgsql-password=${PGSQL_PASSWORD}/g" /etc/powerdns/pdns.d/pdns.local.gpgsql.conf
fi

if [ -n "$PGSQL_DATABASE" ]; then
	sed -r -i "s/^[# ]*gpgsql-dbname=.*/gpgsql-dbname=${PGSQL_DATABASE}/g"     /etc/powerdns/pdns.d/pdns.local.gpgsql.conf
fi

if [ -n "$PGSQL_DNSSEC" ]; then
	sed -r -i "s/^[# ]*gpgsql-dnssec=.*/gpgsql-dnssec=${PGSQL_DNSSEC}/g"     /etc/powerdns/pdns.d/pdns.local.gpgsql.conf
fi

unset -v PGSQL_PASSWORD

trap "pdns_control quit" SIGINT SIGTERM
trap ":" SIGHUP
trap "set -x; pdns_control set query-logging yes" USR1
trap "set +x; pdns_control set query-logging no" USR2

pdns_server "$@" &
PID=$!

while true; do
	wait || true

	if ! kill -0 "$PID" >/dev/null 2>&1; then
		echo "PowerDNS has terminated, exiting" >&2
		exit 1
	fi
done

echo "CAN'T HAPPEN: DROPPED OUT OF INFINITE LOOP" >&2
exit 42

